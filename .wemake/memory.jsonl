{"type":"entity","name":"Software Development Bottlenecks","entityType":"concept","observations":["Writing code was never the bottleneck in software engineering","Real bottlenecks are code reviews, knowledge transfer, testing, debugging, and coordination","Human overhead of coordination and communication wrapped in tickets, planning meetings, and agile rituals","LLMs make code generation faster but don't remove the workload - they shift it","More code flowing through systems creates more pressure on reviewers and maintainers"],"createdAt":"2025-08-16T20:40:57.707Z","version":1}
{"type":"entity","name":"Code Understanding Challenge","entityType":"principle","observations":["The biggest cost of code is understanding it - not writing it","LLMs reduce time to produce code but haven't changed effort required to reason about behavior","Identifying subtle bugs and ensuring long-term maintainability remains challenging","Reviewers struggle to distinguish between generated and handwritten code","Understanding why a particular solution was chosen becomes more difficult"],"createdAt":"2025-08-16T20:40:57.712Z","version":1}
{"type":"entity","name":"Team Collaboration Requirements","entityType":"requirement","observations":["Software engineering depends on shared understanding, alignment, and mentoring","Teams rely on trust and shared context","When code is generated faster than it can be discussed or reviewed, quality is assumed rather than ensured","Creates stress on reviewers and mentors, potentially slowing things down","Need for clear thinking, careful review, and thoughtful design becomes more important"],"createdAt":"2025-08-16T20:40:57.712Z","version":1}
{"type":"entity","name":"AI-First Development Implications","entityType":"strategy","observations":["LLMs enable faster prototyping, scaffolding, and automation","Cost of writing code has dropped but cost of making sense of it together hasn't","Need to focus on understanding, testing, and trusting AI-generated code","Velocity and scale of LLMs amplify copy-paste engineering habits","Quality verification becomes more complex when code is easier to produce"],"createdAt":"2025-08-16T20:40:57.712Z","version":1}
{"type":"relation","from":"Software Development Bottlenecks","to":"Code Understanding Challenge","relationType":"causes","createdAt":"2025-08-16T20:41:04.874Z","version":1}
{"type":"relation","from":"Code Understanding Challenge","to":"Team Collaboration Requirements","relationType":"necessitates","createdAt":"2025-08-16T20:41:04.874Z","version":1}
{"type":"relation","from":"Team Collaboration Requirements","to":"AI-First Development Implications","relationType":"influences","createdAt":"2025-08-16T20:41:04.874Z","version":1}
{"type":"relation","from":"AI-First Development Implications","to":"Software Development Bottlenecks","relationType":"amplifies","createdAt":"2025-08-16T20:41:04.874Z","version":1}