name: TypeScript

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  detect-packages:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.find-packages.outputs.packages }}
    steps:
      - uses: actions/checkout@v4
      - name: Find JS packages
        id: find-packages
        working-directory: src
        run: |
          PACKAGES=$(find . -name package.json -not -path "*/node_modules/*" -exec dirname {} \; | sed 's/^\.\///' | jq -R -s -c 'split("\n")[:-1]')
          echo "packages=$PACKAGES" >> $GITHUB_OUTPUT

  test-monorepo:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: oven-sh/setup-bun@22457c87c1b161cf7dde222c3e82b2b5f8d2bed2 # v2
        with:
          bun-version: latest
      - name: Install dependencies
        run: bun install
      - name: Run tests
        run: bun test --coverage
  test:
    needs: [detect-packages, test-monorepo]
    strategy:
      matrix:
        package: ${{ fromJson(needs.detect-packages.outputs.packages) }}
    name: Test ${{ matrix.package }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@22457c87c1b161cf7dde222c3e82b2b5f8d2bed2 # v2
        with:
          bun-version: latest

      - name: Install dependencies
        working-directory: src/${{ matrix.package }}
        run: bun install

      - name: Check if tests script exists
        id: check-tests
        working-directory: src/${{ matrix.package }}
        run: |
          if jq -e '.scripts.test' package.json >/dev/null; then
            echo "has-tests=true" >> "$GITHUB_OUTPUT"
          else
            echo "has-tests=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Run tests
        if: steps.check-tests.outputs.has-tests == 'true'
        working-directory: src/${{ matrix.package }}
        run: bun run test

  build:
    needs: [detect-packages, test]
    strategy:
      matrix:
        package: ${{ fromJson(needs.detect-packages.outputs.packages) }}
    name: Build ${{ matrix.package }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: oven-sh/setup-bun@22457c87c1b161cf7dde222c3e82b2b5f8d2bed2 # v2
        with:
          bun-version: latest

      - name: Install dependencies
        working-directory: src/${{ matrix.package }}
        run: bun install

      - name: Build package
        working-directory: src/${{ matrix.package }}
        run: bun run build
